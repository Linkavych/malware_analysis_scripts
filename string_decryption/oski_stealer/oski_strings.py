#!/usr/bin/env python3
# Quick RC4 decryption of the strings found in oski_stealer
# Sample: 101d608d893ed193835cd04b4d06a79960032fb703c5268e910dd4880c53a992
# author: @linkavych
# date: 2022-06-11
#
# Redirect the output of this script to a file - it will output a bunch of null lines, 
# but just remove them and you'll have the decrypted strings from this sample.

import base64
import binascii
import pefile
import sys
from Crypto.Cipher import ARC4

BINARY = sys.argv[1]
KEY = b'056139954853430408'


def is_b64(s):
    try:
        line = base64.b64decode(s)
        return line
    except binascii.Error:
        return "None"

def main():

    with open(BINARY, 'rb') as f:
        binaryData = f.read()

    pe = pefile.PE(BINARY)

    for section in pe.sections:
        if b'.rdata\x00' in section.Name:
            data = binaryData[section.PointerToRawData:section.PointerToRawData + section.SizeOfRawData].split(b'\x00')

    for i in data:
        if (i == b'\x00' or i == b''):
            pass
        else:
            CIPHER = ARC4.new(KEY)
            text = base64.b64decode(i)
            msg = CIPHER.decrypt(text).decode()
            print(msg)           


if __name__ == '__main__':
    main()